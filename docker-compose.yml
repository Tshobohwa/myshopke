version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: myshopke-postgres
    environment:
      POSTGRES_DB: myshopke
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 243243
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - myshopke-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: myshopke-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - myshopke-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      target: dev
    container_name: myshopke-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:243243@postgres:5432/myshopke
      JWT_SECRET: dev-jwt-secret-key-change-in-production-12345
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_SECRET: dev-refresh-secret-key-change-in-production-67890
      JWT_REFRESH_EXPIRES_IN: 7d
      PORT: 3001
      FRONTEND_URL: http://localhost:5173,http://localhost:8080
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - myshopke-network
    command: npm run dev

  # Frontend (Vite dev server)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: dev
    container_name: myshopke-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - myshopke-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  myshopke-network:
    driver: bridge
